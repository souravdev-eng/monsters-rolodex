{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-bar/search-bar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","moster","id","name","email","CardList","mosters","map","monster","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","searchFied","target","value","state","fetch","then","response","json","users","this","searchFilter","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BAEL,6BAAKL,EAAMI,OAAOE,OAClB,6BAAKN,EAAMI,OAAOG,aCRXC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,QAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAuBP,OAAQO,GAApBA,EAAQN,WCHZO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCDG,E,kDApCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAZrC,EAAKC,MAAQ,CACXd,QAAS,GACTW,WAAY,IAJF,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,QAASmB,S,+BAOpC,IAAD,SACyBC,KAAKN,MAA7Bd,EADD,EACCA,QAASW,EADV,EACUA,WACXU,EAAerB,EAAQsB,QAAO,SAACpB,GAAD,OAClCA,EAAQL,KAAK0B,cAAcC,SAASb,EAAWY,kBAGjD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAc,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,WAE5D,cAAC,EAAD,CAAUb,QAASqB,W,GA/BTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bcc482ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img\r\n        alt='monsters'\r\n        src={`https://robohash.org/${props.moster.id}?set=set2&size=270x270`}\r\n      />\r\n      <h2>{props.moster.name}</h2>\r\n      <h3>{props.moster.email}</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\nexport const CardList = (props) => (\r\n  <div className='card-list'>\r\n    {props.mosters.map((monster) => (\r\n      <Card key={monster.id} moster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './search-bar.style.css';\r\n\r\nexport const SearchBar = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBar } from './components/search-bar/search-bar.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mosters: [],\n      searchFied: '',\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ mosters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchFied: e.target.value });\n  };\n\n  render() {\n    const { mosters, searchFied } = this.state;\n    const searchFilter = mosters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchFied.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBar\n          placeholder='search monsters'\n          handleChange={(e) => this.setState({ searchFied: e.target.value })}\n        />\n        <CardList mosters={searchFilter} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}